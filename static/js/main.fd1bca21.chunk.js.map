{"version":3,"sources":["components/Users.js","components/Pagination.js","App.js","index.js"],"names":["Users","users","loading","className","map","user","key","id","login","html_url","repos_url","Pagination","usersPerPage","totalUsers","paginate","pageNumbers","i","Math","ceil","push","number","onClick","href","App","useState","setUsers","setLoading","currentPage","setcurrentPage","useEffect","a","axios","get","api_call","data","fetchData","console","log","indexOfLastUser","indexOfFirstUser","currentUsers","slice","length","pageNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSA0BeA,EAxBD,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MACT,OAD8B,EAAdC,QAEL,aAGP,yBAAKC,UAAU,sBACX,yBAAKA,UAAU,YACVF,EAAMG,KAAI,SAAAC,GAAI,OACf,yBAAKC,IAAKD,EAAKE,IACX,yBAAKJ,UAAU,aACf,6CAAmBE,EAAKG,OACxB,4BACI,mCAASH,EAAKE,IACd,oCAAUF,EAAKI,UACf,0CAAgBJ,EAAKK,oBCOlCC,EArBI,SAAC,GAGhB,IAH0D,IAAzCC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,SACrCC,EAAc,GAEZC,EAAI,EAAGA,GAAKC,KAAKC,KAAKL,EAAWD,GAAeI,IACpDD,EAAYI,KAAKH,GAErB,OACI,6BACI,wBAAIb,UAAU,SACTY,EAAYX,KAAI,SAAAgB,GAAM,OACnB,wBAAId,IAAKc,EAAQjB,UAAU,aACvB,uBAAGkB,QAAS,kBAAMP,EAASM,IAASE,KAAK,IAAInB,UAAU,aAClDiB,U,MCmCdG,MA3Cf,WAAgB,IAAD,EAEaC,mBAAS,IAFtB,mBAENvB,EAFM,KAECwB,EAFD,OAGiBD,oBAAS,GAH1B,mBAGNtB,EAHM,KAGGwB,EAHH,OAIyBF,mBAAS,GAJlC,mBAING,EAJM,KAIOC,EAJP,OAKUJ,mBAAS,GAAzBZ,EALM,oBAOfiB,qBAAU,YACS,uCAAG,4BAAAC,EAAA,6DAChBJ,GAAW,GACO,uBACI,2CACN,IAJA,SAKOK,IAAMC,IAAN,iDAHL,uBAGK,0BAFD,2CAEC,4BADP,MAJA,OAKVC,EALU,OAMhBR,EAASQ,EAASC,MAClBR,GAAW,GAPK,2CAAH,qDAUhBS,KACE,IAEHC,QAAQC,IAAIpC,GAGZ,IAAMqC,EAAkBX,EAAcf,EAChC2B,EAAmBD,EAAkB1B,EACrC4B,EAAevC,EAAMwC,MAAMF,EAAkBD,GAKnD,OACE,yBAAKnC,UAAU,aACX,yBAAKA,UAAU,iBACb,4CACA,kBAAC,EAAD,CAAOF,MAAOuC,EAActC,QAASA,IACrC,kBAAC,EAAD,CAAYU,aAAcA,EAAcC,WAAYZ,EAAMyC,OAAQ5B,SAPzD,SAAC6B,GAAD,OAAgBf,EAAee,SC7BlDC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.fd1bca21.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Users = ({ users, loading }) => {\r\n        if(loading){\r\n            return 'Loading...'\r\n        }\r\n        return(\r\n            <div className='all-info-container'>\r\n                <div className='all-info'>\r\n                    {users.map(user=> (\r\n                    <div key={user.id}>\r\n                        <div className='user-info'>\r\n                        <span>User-login: {user.login}</span>\r\n                        <ul>\r\n                            <li>ID: {user.id}</li>\r\n                            <li>URL: {user.html_url}</li>\r\n                            <li>Repos_URL: {user.repos_url}</li>\r\n                        </ul>\r\n                        </div>\r\n                    </div>\r\n                ))} \r\n                </div>\r\n            </div>\r\n            \r\n        )}\r\n\r\nexport default Users;\r\n","import React from 'react'\r\n\r\nconst Pagination = ({usersPerPage, totalUsers, paginate}) => {\r\n    const pageNumbers = [];\r\n\r\n    for(let i = 1; i <= Math.ceil(totalUsers/usersPerPage); i++){\r\n        pageNumbers.push(i)\r\n    }\r\n    return (\r\n        <nav>\r\n            <ul className='pages'>\r\n                {pageNumbers.map(number => (\r\n                    <li key={number} className='page-item'>\r\n                        <a onClick={() => paginate(number)} href='#' className='page-link'>\r\n                            {number}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Pagination","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Users from './components/Users';\nimport Pagination from './components/Pagination';\nimport './App.css'\n\nfunction App() {\n\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setcurrentPage] = useState(1);\n  const [usersPerPage] = useState(6);\n\nuseEffect(() => {\n    const fetchData = async() => {\n      setLoading(true)\n      const client_id = 'Iv1.8eeafcd94e4648ca';\n      const client_secret = '35fba642113445960f0b0617a8e0588f400620f7';\n      const userNum = 100;\n      const api_call = await axios.get(`https://api.github.com/users?client_id=${client_id}&client_secret=${client_secret}&page=1&per_page=${userNum}`)\n      setUsers(api_call.data)\n      setLoading(false)\n     }\n\n   fetchData()\n  }, [])\n\n  console.log(users)\n\n  //get current users\n  const indexOfLastUser = currentPage * usersPerPage;\n  const indexOfFirstUser = indexOfLastUser - usersPerPage;\n  const currentUsers = users.slice(indexOfFirstUser, indexOfLastUser);\n\n  //change page in pagination\n  const paginate = (pageNumber) => setcurrentPage(pageNumber);\n\n  return (\n    <div className='container'>\n        <div className='app-container'>\n          <h1>GitHub Users</h1>\n          <Users users={currentUsers} loading={loading}/>\n          <Pagination usersPerPage={usersPerPage} totalUsers={users.length} paginate={paginate} />\n        </div>\n        \n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}